{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json",
  "$comment": "BUNDLED PROFILE: This single file contains (1) the root attributes schema for client-submitted DataCite 4.6 metadata, (2) centralised enumerations in $defs (with iriMap bridges), (3) a JSON-LD context under profile.@context for semantics, (4) a JSON:API response validator (responseProfile), (5) a JSON:API submission validator (submitProfile), and (6) an exportProfile with language-tag conversion rules for RDF/JSON-LD export. Controlled lists are fully embedded in this bundled profile; enum IRIs resolve to fragment identifiers within this document under '#enums/<list>/<term>' so no external enum_lists are required.",
  "title": "DataCite Metadata Schema v4.6 – REST API profile (bundled)",
  "description": "Self‑contained JSON Schema and JSON‑LD context for validating and semantically describing DataCite 4.6 metadata as submitted to the DataCite REST API.  This profile reflects the property names and object structures used by the API and inlines all controlled vocabularies.",
  "type": "object",
  "$comment": "==== ROOT ATTRIBUTES SCHEMA (client-submitted payload, mirrors DataCite REST 'attributes') ====",
  "properties": {
    "identifiers": {
      "type": "array",
      "description": "Additional non‑DOI identifiers for the resource (e.g., ISBN, local accession number). Note: Do not duplicate values across 'identifiers' and 'alternateIdentifiers'; choose one field for a given identifier.",
      "items": {
        "type": "object",
        "properties": {
          "identifier": { "type": "string", "description": "The identifier value." },
          "identifierType": { "type": "string", "description": "Type of the identifier (e.g. Local accession number, ISBN, etc.)." }
        },
        "required": ["identifier", "identifierType"],
        "additionalProperties": false
      }
      ,
      "examples": [
        [
          { "identifierType": "ISBN", "identifier": "978-3-16-148410-0" },
          { "identifierType": "Local accession number", "identifier": "ABC-12345" }
        ]
      ]
    },
    "alternateIdentifiers": {
      "type": "array",
      "description": "Alternate identifiers for the same instance of the resource. May include local or internal IDs (e.g., inventory numbers, serial numbers). Note: Do not duplicate values across 'identifiers' and 'alternateIdentifiers'; choose one field for a given identifier.",
      "items": {
        "type": "object",
        "properties": {
          "alternateIdentifier": { "type": "string", "description": "An identifier, distinct from the DOI and internal IDs, for the same instance of the resource (free text)." },
          "alternateIdentifierType": { "type": "string", "description": "Type/namespace of the alternate identifier (free text, e.g., Local accession number, Inventory number, Serial number)." }
        },
        "required": ["alternateIdentifier", "alternateIdentifierType"],
        "additionalProperties": false
      }
      ,
      "examples": [
        [
          { "alternateIdentifierType": "Local accession number", "alternateIdentifier": "E-GEOD-34814" }
        ]
      ]
    },

    "doi": {
      "type": "string",
      "description": "The DOI assigned to the resource.",
      "pattern": "^10\\.[0-9]{4,}/[-._;()/:a-zA-Z0-9]+$"
    },

    "creators": {
      "type": "array",
      "minItems": 1,
      "maxItems": 10000,
      "description": "Persons or organizations responsible for creating the resource.",
      "examples": [
        [
          {
            "name": "Doe, Jane",
            "nameType": "Personal",
            "nameIdentifiers": [
              { "nameIdentifier": "https://orcid.org/0000-0002-1825-0097", "nameIdentifierScheme": "ORCID" }
            ],
            "affiliation": [ { "name": "Example University" } ]
          }
        ]
      ],
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Full name of the creator or organization." },
          "nameType": { "$ref": "#/$defs/nameType/enumSchema" },
          "givenName": { "type": "string" },
          "familyName": { "type": "string" },
          "affiliation": {
            "type": "array",
            "description": "Institutional affiliations for the creator.",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "description": "Name of the affiliation." },
                "affiliationIdentifier": { "type": "string", "description": "Identifier for the affiliation (e.g. ROR, ISNI)." },
                "affiliationIdentifierScheme": { "type": "string", "description": "Scheme of the affiliation identifier." },
                "schemeUri": { "type": "string", "format": "uri", "description": "URI of the identifier scheme." }
              },
              "required": ["name"],
              "allOf": [
                { "if": { "required": ["affiliationIdentifier"] }, "then": { "required": ["affiliationIdentifierScheme", "schemeUri"] } },
                { "if": { "required": ["affiliationIdentifierScheme"] }, "then": { "required": ["schemeUri"] } }
              ],
              "additionalProperties": false
            }
          },
          "nameIdentifiers": {
            "type": "array",
            "description": "Persistent identifiers for the creator (e.g. ORCID, ISNI).",
            "items": {
              "type": "object",
              "properties": {
                "nameIdentifier": { "type": "string", "description": "The identifier." },
                "nameIdentifierScheme": { "type": "string", "description": "The identifier scheme (e.g. ORCID, ISNI, ROR, personal URL)." },
                "schemeUri": { "type": "string", "format": "uri", "description": "URI of the identifier scheme." }
              },
              "required": ["nameIdentifier", "nameIdentifierScheme"],
              "additionalProperties": false
            }
          }
        },
        "required": ["name"],
        "additionalProperties": false,
        "allOf": [
          {
            "if": { "properties": { "nameType": { "const": "Organizational" } }, "required": ["nameType"] },
            "then": {
              "not": { "anyOf": [ { "required": ["givenName"] }, { "required": ["familyName"] } ] }
            }
          }
        ]
      }
    },
    "titles": {
      "type": "array",
      "minItems": 1,
      "description": "Title information for the resource.",
      "items": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "description": "The title text." },
          "titleType": { "$ref": "#/$defs/titleType/enumSchema" },
          "lang": { "type": "string", "description": "IETF BCP 47 language tag, e.g. 'en' or 'en-GB'." }
        },
        "required": ["title"],
        "additionalProperties": false
      }
    },
    "publisher": {
      "type": "object",
      "description": "Information about the entity that publishes the resource.",
      "properties": {
        "name": { "type": "string", "description": "Publisher name (free text)." },
        "publisherIdentifier": { "type": "string", "description": "Persistent identifier for the publisher (e.g., ROR, ISNI)." },
        "publisherIdentifierScheme": { "type": "string", "description": "Identifier scheme for the publisher (e.g., ROR, ISNI)." },
        "schemeUri": { "type": "string", "format": "uri", "description": "URI of the identifier scheme." },
        "lang": { "type": "string", "description": "IETF BCP 47 language tag for the publisher name." }
      },
      "required": ["name"],
      "additionalProperties": false,
      "allOf": [
        { "if": { "required": ["publisherIdentifier"] }, "then": { "required": ["publisherIdentifierScheme"] } },
        { "if": { "required": ["publisherIdentifierScheme"] }, "then": { "required": ["schemeUri"] } }
      ]
      ,
      "examples": [
        {
          "name": "Helmholtz Centre Potsdam - GFZ German Research Centre for Geosciences",
          "lang": "en",
          "publisherIdentifier": "https://ror.org/04z8jg394",
          "publisherIdentifierScheme": "ROR",
          "schemeUri": "https://ror.org"
        }
      ]
    },
    "container": {
      "type": "object",
      "description": "Information about the container in which the resource is published (e.g. journal, book, collection).",
      "properties": {
        "type": { "type": "string", "description": "Type of the container (e.g. 'Journal', 'Collection')." },
        "title": { "type": "string", "description": "Name of the container." },
        "identifier": { "type": "string", "description": "Identifier for the container (e.g. ISSN)." },
        "identifierType": { "type": "string", "description": "Type of the container identifier (e.g. ISSN)." }
      },
      "required": ["type", "title"],
      "additionalProperties": false
    },
    "publicationYear": {
      "description": "Four-digit year (YYYY) when the resource was or will be made publicly available. For embargoed resources, use the year the embargo ends. For dynamic data or software with multiple releases, provide details under 'dates'. If digitised, give the publication year of the digital version.",
      "anyOf": [
        { "type": "string", "pattern": "^\\d{4}$" },
        { "type": "integer", "minimum": 0 }
      ]
    },
    "subjects": {
      "type": "array",
      "description": "Subject keywords or classification codes describing the resource.",
      "items": {
        "type": "object",
        "properties": {
          "subject": { "type": "string", "description": "Subject keyword or term (free text)." },
          "subjectScheme": { "type": "string", "description": "Name of the subject scheme or authority (e.g., LCSH, ANZSRC)." },
          "schemeUri": { "type": "string", "format": "uri", "description": "URI of the subject scheme." },
          "valueUri": { "type": "string", "format": "uri", "description": "URI of the subject term (if available)." },
          "classificationCode": { "type": "string", "description": "Classification code within the scheme (useful when no value URI exists)." },
          "lang": { "type": "string", "description": "IETF BCP 47 language tag for the subject label (e.g., 'en')." }
        },
        "required": ["subject"],
        "additionalProperties": false,
        "examples": [
          [
            {
              "subject": "Climate change mitigation",
              "lang": "en",
              "subjectScheme": "Library of Congress Subject Headings (LCSH)",
              "schemeUri": "https://id.loc.gov/authorities/subjects.html",
              "valueUri": "https://id.loc.gov/authorities/subjects/sh2009009655.html"
            },
            {
              "subject": "Climate change processes",
              "lang": "en",
              "subjectScheme": "ANZSRC Fields of Research",
              "schemeUri": "https://www.abs.gov.au/statistics/classifications/australian-and-new-zealand-standard-research-classification-anzsrc",
              "classificationCode": "370201"
            }
          ]
        ]
      }
    },
    "contributors": {
      "type": "array",
      "maxItems": 10000,
      "description": "Persons or organizations that contributed to the resource in addition to the creators.",
      "examples": [
        [
          {
            "name": "Roe, Richard",
            "nameType": "Personal",
            "contributorType": "DataCurator",
            "nameIdentifiers": [
              { "nameIdentifier": "https://orcid.org/0000-0001-2345-6789", "nameIdentifierScheme": "ORCID" }
            ],
            "affiliation": [ { "name": "Example Institute", "affiliationIdentifier": "https://ror.org/05dxps055", "affiliationIdentifierScheme": "ROR", "schemeUri": "https://ror.org" } ]
          }
        ]
      ],
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Full name or organisation name." },
          "nameType": { "$ref": "#/$defs/nameType/enumSchema" },
          "givenName": { "type": "string" },
          "familyName": { "type": "string" },
          "contributorType": { "$ref": "#/$defs/contributorType/enumSchema" },
          "affiliation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "affiliationIdentifier": { "type": "string" },
                "affiliationIdentifierScheme": { "type": "string" },
                "schemeUri": { "type": "string", "format": "uri" }
              },
              "required": ["name"],
              "allOf": [
                { "if": { "required": ["affiliationIdentifier"] }, "then": { "required": ["affiliationIdentifierScheme"] } },
                { "if": { "required": ["affiliationIdentifierScheme"] }, "then": { "required": ["schemeUri"] } }
              ],
              "additionalProperties": false
            }
          },
          "nameIdentifiers": {
            "type": "array",
            "description": "Persistent identifiers for the contributor (e.g. ORCID, ISNI).",
            "items": {
              "type": "object",
              "properties": {
                "nameIdentifier": { "type": "string", "description": "The identifier." },
                "nameIdentifierScheme": { "type": "string", "description": "The identifier scheme (e.g. ORCID, ISNI, personal URL)." },
                "schemeUri": { "type": "string", "format": "uri", "description": "URI of the identifier scheme." }
              },
              "required": ["nameIdentifier", "nameIdentifierScheme"],
              "additionalProperties": false
            }
          }
        },
        "required": ["name", "contributorType"],
        "additionalProperties": false,
        "allOf": [
          {
            "if": { "properties": { "nameType": { "const": "Organizational" } }, "required": ["nameType"] },
            "then": {
              "not": { "anyOf": [ { "required": ["givenName"] }, { "required": ["familyName"] } ] }
            }
          }
        ]
      }
    },
    "dates": {
      "type": "array",
      "description": "Important dates in the life cycle of the resource.",
      "items": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date value using W3CDTF (e.g., YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DDThh:mm:ssZ); date ranges in RKMS-ISO8601 (e.g., 2004-03-02/2005-06-02). Years BCE must be prefixed with '-', e.g., -0054."
          },
          "dateType": { "$ref": "#/$defs/dateType/enumSchema" },
          "dateInformation": { "type": "string" }
        },
        "required": ["date", "dateType"],
        "additionalProperties": false,
        "examples": [
          [
            { "date": "2022-08-01", "dateType": "Issued" },
            { "date": "2020-01-01", "dateType": "Other", "dateInformation": "Conceptualized" },
            { "date": "2004-03-02/2005-06-02", "dateType": "Coverage" },
            { "date": "-0054", "dateType": "Other", "dateInformation": "55 BCE" }
          ]
        ]
      }
    },
    "language": { "type": "string", "description": "Primary language of the resource (IETF BCP 47 code)." },
    "types": {
      "type": "object",
      "description": "Resource type classifications.",
      "$comment": "DataCite REST accepts only 'resourceTypeGeneral' (required) and 'resourceType' (optional). The optional crosswalk fields ('schemaOrg','bibtex','citeproc','ris') are profile-only and must not be sent to the DataCite API; they are intended for export/mapping only.",
      "properties": {
        "resourceType": { "type": "string", "description": "Free‑text description of the resource type." },
        "resourceTypeGeneral": { "$ref": "#/$defs/resourceTypeGeneral/enumSchema" },
        "schemaOrg": { "type": "string", "format": "uri" },
        "bibtex": { "type": "string" },
        "citeproc": { "type": "string" },
        "ris": { "type": "string" }
      },
      "required": ["resourceTypeGeneral"],
      "additionalProperties": false
      ,
      "examples": [
        { "resourceType": "Census Data", "resourceTypeGeneral": "Dataset" },
        { "resourceType": "Specimen", "resourceTypeGeneral": "PhysicalObject" },
        { "resourceType": "Executable Workflow", "resourceTypeGeneral": "Workflow" }
      ]
    },
    "relatedIdentifiers": {
      "type": "array",
      "description": "Identifiers of related resources (globally unique). Use for DOIs, URLs, and other persistent IDs.",
      "examples": [
        [
          {
            "relatedIdentifier": "RRID:AB_1234567",
            "relatedIdentifierType": "RRID",
            "relationType": "IsReferencedBy"
          },
          {
            "relatedIdentifier": "CSTR:12345.abcde.fghi",
            "relatedIdentifierType": "CSTR",
            "relationType": "IsReferencedBy"
          },
          {
            "relatedIdentifier": "https://example.com/metadata.xml",
            "relatedIdentifierType": "URL",
            "relationType": "HasMetadata",
            "relatedMetadataScheme": "DDI-L",
            "schemeUri": "http://www.ddialliance.org/Specification/DDI-Lifecycle/3.1/XMLSchema/instance.xsd",
            "schemeType": "XSD"
          }
        ]
      ],
      "items": {
        "type": "object",
        "properties": {
          "relatedIdentifier": { "type": "string" },
          "relatedIdentifierType": { "$ref": "#/$defs/relatedIdentifierType/enumSchema" },
          "relationType": { "$ref": "#/$defs/relationType/enumSchema" },
          "resourceTypeGeneral": { "$ref": "#/$defs/resourceTypeGeneral/enumSchema" },
          "relatedMetadataScheme": { "type": "string" },
          "schemeUri": { "type": "string", "format": "uri" },
          "schemeType": { "type": "string" }
        },
        "required": ["relatedIdentifier", "relatedIdentifierType", "relationType"],
        "additionalProperties": false,
        "allOf": [
          {
            "if": { "properties": { "relationType": { "enum": ["HasMetadata", "IsMetadataFor"] } }, "required": ["relationType"] },
            "then": {
              "allOf": [
                { "if": { "required": ["relatedMetadataScheme"] }, "then": { "required": ["schemeUri"] } }
              ]
            },
            "else": {
              "not": {
                "anyOf": [
                  { "required": ["relatedMetadataScheme"] },
                  { "required": ["schemeUri"] },
                  { "required": ["schemeType"] }
                ]
              }
            }
          }
        ]
      }
    },
    "relatedItems": {
      "type": "array",
      "description": "Full citation information for resources related to this one. Use when you need to provide series/citation metadata or when the related resource lacks an identifier (an identifier may still be provided).",
      "items": {
        "type": "object",
        "properties": {
          "relatedItemType": { "$ref": "#/$defs/resourceTypeGeneral/enumSchema" },
          "relationType": { "$ref": "#/$refs/relationTypeForRelatedItem" },
          "relatedItemIdentifier": {
            "type": "object",
            "properties": {
              "relatedItemIdentifier": { "type": "string" },
              "relatedItemIdentifierType": { "$ref": "#/$defs/relatedIdentifierType/enumSchema" },
              "relatedMetadataScheme": { "type": "string" },
              "schemeUri": { "type": "string", "format": "uri" },
              "schemeType": { "type": "string" }
            },
            "required": ["relatedItemIdentifier", "relatedItemIdentifierType"],
            "additionalProperties": false,
            "allOf": [
              {
                "if": { "properties": { "relatedMetadataScheme": {} }, "required": ["relatedMetadataScheme"] },
                "then": { "required": ["schemeUri"] }
              }
            ]
          },
          "creators": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "nameType": { "$ref": "#/$defs/nameType/enumSchema" },
                "givenName": { "type": "string" },
                "familyName": { "type": "string" }
              },
              "required": ["name"],
              "additionalProperties": false,
              "allOf": [
                {
                  "if": { "properties": { "nameType": { "const": "Organizational" } }, "required": ["nameType"] },
                  "then": { "not": { "anyOf": [ { "required": ["givenName"] }, { "required": ["familyName"] } ] } }
                }
              ]
            }
          },
          "contributors": {
            "type": "array",
            "maxItems": 10000,
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "nameType": { "$ref": "#/$defs/nameType/enumSchema" },
                "givenName": { "type": "string" },
                "familyName": { "type": "string" },
                "contributorType": { "$ref": "#/$defs/contributorType/enumSchema" }
              },
              "required": ["name", "contributorType"],
              "additionalProperties": false,
              "allOf": [
                {
                  "if": { "properties": { "nameType": { "const": "Organizational" } }, "required": ["nameType"] },
                  "then": { "not": { "anyOf": [ { "required": ["givenName"] }, { "required": ["familyName"] } ] } }
                }
              ]
            }
          },
          "titles": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "title": { "type": "string" },
                "titleType": { "$ref": "#/$defs/titleType/enumSchema" },
                "lang": { "type": "string" }
              },
              "required": ["title"],
              "additionalProperties": false
            }
          },
          "publicationYear": { "type": "string", "pattern": "^\\d{4}$" },
          "volume": { "type": "string" },
          "issue": { "type": "string" },
          "number": { "type": "string" },
          "numberType": { "type": "string", "enum": ["Article", "Chapter", "Report", "Other"] },
          "firstPage": { "type": "string" },
          "lastPage": { "type": "string" },
          "publisher": { "type": "string" },
          "edition": { "type": "string" }
        },
        "required": ["relatedItemType", "relationType"],
        "additionalProperties": false,
        "allOf": [
          {
            "anyOf": [
              { "required": ["relatedItemIdentifier"] },
              { "required": ["titles"] }
            ]
          },
          {
            "if": { "properties": { "relationType": { "enum": ["HasMetadata", "IsMetadataFor"] } }, "required": ["relationType"] },
            "then": {
              "required": ["relatedItemIdentifier"],
              "properties": {
                "relatedItemIdentifier": {
                  "allOf": [
                    { "if": { "not": { "required": ["relatedMetadataScheme"] } }, "then": false }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "sizes": {
      "type": "array",
      "description": "Extent, size, or duration of the resource (free text). Examples: '15 pages', '1 MB', '45 minutes'.",
      "items": { "type": "string" },
      "examples": [["15 pages", "1 MB", "45 minutes"]]
    },
    "formats": {
      "type": "array",
      "description": "Technical format of the resource (free text). Use MIME type or file extension when possible, e.g., 'application/pdf', 'text/xml', 'video/mpeg'.",
      "items": { "type": "string" },
      "examples": [["application/xml", "application/pdf", "video/mpeg"]]
    },
"version": {
  "type": "string",
  "description": "Version number or label of the resource. Suggested format: major.minor (e.g., 1.0, 2.1). Register a new identifier for a major version change; use this field to track minor or descriptive updates. May be used in conjunction with 'alternateIdentifiers', 'relatedIdentifiers', or 'descriptions' to indicate relationships or changes between versions.",
  "examples": ["1.0", "2.1", "3.0-beta", "2025-01"]
},    
"rightsList": {
  "type": "array",
  "description": "Rights statements or licences for the resource. May include licence title, URI, and identifier scheme such as SPDX. Repeat as needed for complex rights. Include embargo information if applicable.",
  "items": {
    "type": "object",
    "properties": {
      "rights": {
        "type": "string",
        "description": "Full name of the licence or rights statement, including version information if applicable (e.g., 'Creative Commons Attribution 4.0 International')."
      },
      "rightsUri": {
        "type": "string",
        "format": "uri",
        "description": "URI of the licence or rights statement (e.g., 'https://creativecommons.org/licenses/by/4.0/')."
      },
      "rightsIdentifier": {
        "type": "string",
        "description": "Short standardized identifier for the licence (e.g., 'CC-BY-4.0')."
      },
      "rightsIdentifierScheme": {
        "type": "string",
        "description": "Name of the identifier scheme (e.g., 'SPDX')."
      },
      "schemeUri": {
        "type": "string",
        "format": "uri",
        "description": "URI of the identifier scheme (e.g., 'https://spdx.org/licenses/')."
      },
      "lang": {
        "type": "string",
        "description": "IETF BCP 47 language tag for the rights statement (e.g., 'en')."
      }
    },
    "required": ["rights"],
    "allOf": [
      { "if": { "required": ["rightsIdentifier"] }, "then": { "required": ["rightsIdentifierScheme"] } },
      { "if": { "required": ["rightsIdentifierScheme"] }, "then": { "required": ["schemeUri"] } }
    ],
    "additionalProperties": false,
    "examples": [
      [
        {
          "rights": "Creative Commons Attribution 4.0 International",
          "rightsUri": "https://creativecommons.org/licenses/by/4.0/",
          "schemeUri": "https://spdx.org/licenses/",
          "rightsIdentifier": "CC-BY-4.0",
          "rightsIdentifierScheme": "SPDX",
          "lang": "en"
        }
      ]
    ]
  }
},
    "descriptions": {
      "type": "array",
      "description": "Free‑form text descriptions of the resource.",
      "items": {
        "type": "object",
        "properties": {
          "description": { "type": "string", "description": "Free-text description. Best practice is to supply at least one description." },
          "descriptionType": { "$ref": "#/$defs/descriptionType/enumSchema" },
          "lang": { "type": "string", "description": "IETF BCP 47 language tag for the description text (e.g., 'en')." }
        },
        "required": ["description", "descriptionType"],
        "additionalProperties": false
        ,
        "examples": [
          [
            { "lang": "en", "description": "Example abstract", "descriptionType": "Abstract" }
          ]
        ]
      }
    },
    "geoLocations": {
      "type": "array",
      "description": "Spatial region or named place where the data was gathered or about which the data is focused. Use WGS 84 decimal coordinates. Repeat to indicate several locations.",
      "items": {
        "type": "object",
        "properties": {
          "geoLocationPlace": { "type": "string", "description": "Free-text place name (e.g., 'Disko Bay')." },
          "geoLocationPoint": {
            "type": "object",
            "description": "A single point location (longitude/latitude pair in WGS84).",
            "properties": {
              "pointLongitude": {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "description": "Longitude in decimal degrees (WGS84), −180 to 180 (positive east)."
              },
              "pointLatitude": {
                "type": "number",
                "minimum": -90,
                "maximum": 90,
                "description": "Latitude in decimal degrees (WGS84), −90 to 90 (positive north)."
              }
            },
            "required": ["pointLongitude", "pointLatitude"],
            "additionalProperties": false
          },
          "geoLocationBox": {
            "type": "object",
            "description": "A bounding box defined by west/east longitudes and south/north latitudes (WGS84).",
            "properties": {
              "westBoundLongitude": {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "description": "Western longitude of the box (decimal degrees, WGS84)."
              },
              "eastBoundLongitude": {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "description": "Eastern longitude of the box (decimal degrees, WGS84)."
              },
              "southBoundLatitude": {
                "type": "number",
                "minimum": -90,
                "maximum": 90,
                "description": "Southern latitude of the box (decimal degrees, WGS84)."
              },
              "northBoundLatitude": {
                "type": "number",
                "minimum": -90,
                "maximum": 90,
                "description": "Northern latitude of the box (decimal degrees, WGS84)."
              }
            },
            "required": ["westBoundLongitude", "eastBoundLongitude", "southBoundLatitude", "northBoundLatitude"],
            "additionalProperties": false
          },
          "geoLocationPolygon": {
            "type": "array",
            "description": "One or more polygons described by a sequence of vertices (WGS84). If the polygon covers more than half the Earth, supply an inPolygonPoint.",
            "items": {
              "type": "object",
              "properties": {
                "polygonPoint": {
                  "type": "array",
                  "minItems": 4,
                  "description": "Sequence of polygon vertices (last point should repeat the first).",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pointLongitude": {
                        "type": "number",
                        "minimum": -180,
                        "maximum": 180,
                        "description": "Vertex longitude in decimal degrees (WGS84)."
                      },
                      "pointLatitude": {
                        "type": "number",
                        "minimum": -90,
                        "maximum": 90,
                        "description": "Vertex latitude in decimal degrees (WGS84)."
                      }
                    },
                    "required": ["pointLongitude", "pointLatitude"],
                    "additionalProperties": false
                  }
                },
                "inPolygonPoint": {
                  "type": "object",
                  "properties": {
                    "pointLongitude": {
                      "type": "number",
                      "minimum": -180,
                      "maximum": 180,
                      "description": "Longitude of a point inside the polygon (required only for polygons larger than half the Earth)."
                    },
                    "pointLatitude": {
                      "type": "number",
                      "minimum": -90,
                      "maximum": 90,
                      "description": "Latitude of a point inside the polygon (required only for polygons larger than half the Earth)."
                    }
                  },
                  "required": ["pointLongitude", "pointLatitude"],
                  "additionalProperties": false
                }
              },
              "required": ["polygonPoint"],
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false
        ,
        "examples": [
          [
            {
              "geoLocationPlace": "Disko Bay",
              "geoLocationPoint": { "pointLatitude": 69.0, "pointLongitude": 52.0 }
            },
            {
              "geoLocationBox": {
                "eastBoundLongitude": 123.225,
                "northBoundLatitude": 49.28,
                "southBoundLatitude": 49.24,
                "westBoundLongitude": 123.27
              }
            }
          ]
        ]
      }
    },
    "fundingReferences": {
      "type": "array",
      "description": "Information about financial support (funding) for the resource. Best practice: include funding information when financial support has been received.",
      "examples": [
        [
          {
            "funderName": "National Science Foundation",
            "funderIdentifier": "https://doi.org/10.13039/100000001",
            "funderIdentifierType": "Crossref Funder ID",
            "schemeUri": "https://www.crossref.org/services/funder-registry/",
            "awardNumber": "ABC-123456",
            "awardUri": "https://example.org/awards/ABC-123456",
            "awardTitle": "Open Data Infrastructure"
          },
          {
            "funderName": "Example Research Council",
            "funderIdentifier": "https://ror.org/05dxps055",
            "funderIdentifierType": "ROR",
            "schemeUri": "https://ror.org/",
            "awardNumber": "ERC-987654",
            "awardUri": "https://example.org/awards/ERC-987654",
            "awardTitle": "Graph-based Metadata Interoperability"
          }
        ]
      ],
      "items": {
        "type": "object",
        "properties": {
          "funderName": { "type": "string", "description": "Name of the funding provider (mandatory when a funding reference is supplied)." },
          "funderIdentifier": { "type": "string", "format": "uri", "description": "Persistent identifier for the funder (e.g., Crossref Funder ID DOI, ROR, ISNI)." },
          "funderIdentifierType": { "$ref": "#/$defs/funderIdentifierType/enumSchema" },
          "schemeUri": { "type": "string", "format": "uri", "description": "URI of the funder identifier scheme (e.g., Crossref Funder Registry, ROR)." },
          "awardNumber": { "type": "string", "description": "Grant or award number/code assigned by the funder." },
          "awardUri": { "type": "string", "format": "uri", "description": "URI to a funder-provided page with more information about the award (may be a grant DOI URL)." },
          "awardTitle": { "type": "string", "description": "Human-readable title or name of the award." }
        },
        "required": ["funderName"],
        "allOf": [
          {
            "if": { "required": ["funderIdentifier"] },
            "then": { "required": ["funderIdentifierType"] }
          }
        ],
        "additionalProperties": false
      }
    }
  },
  "required": ["doi", "creators", "titles", "publisher", "publicationYear", "types"],
  "additionalProperties": false,
  "$comment": "==== ENUMERATIONS ($defs) — validation enums plus iriMap to stable IRIs used during semantic export ====",
  "$defs": {
    "resourceTypeGeneral": {
      "enum": [
        "Audiovisual","Award","Book","BookChapter","Collection",
        "ComputationalNotebook","ConferencePaper","ConferenceProceeding",
        "DataPaper","Dataset","Dissertation","Event","Image",
        "InteractiveResource","Instrument","Journal","JournalArticle",
        "Model","OutputManagementPlan","PeerReview","PhysicalObject",
        "Preprint","Project","Report","Service","Software","Sound",
        "Standard","StudyRegistration","Text","Workflow","Other"
      ],
      "iriMap": {
        "Audiovisual": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Audiovisual",
        "Award": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Award",
        "Book": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Book",
        "BookChapter": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/BookChapter",
        "Collection": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Collection",
        "ComputationalNotebook": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/ComputationalNotebook",
        "ConferencePaper": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/ConferencePaper",
        "ConferenceProceeding": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/ConferenceProceeding",
        "DataPaper": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/DataPaper",
        "Dataset": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Dataset",
        "Dissertation": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Dissertation",
        "Event": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Event",
        "Image": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Image",
        "InteractiveResource": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/InteractiveResource",
        "Instrument": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Instrument",
        "Journal": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Journal",
        "JournalArticle": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/JournalArticle",
        "Model": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Model",
        "OutputManagementPlan": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/OutputManagementPlan",
        "PeerReview": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/PeerReview",
        "PhysicalObject": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/PhysicalObject",
        "Preprint": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Preprint",
        "Project": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Project",
        "Report": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Report",
        "Service": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Service",
        "Software": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Software",
        "Sound": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Sound",
        "Standard": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Standard",
        "StudyRegistration": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/StudyRegistration",
        "Text": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Text",
        "Workflow": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Workflow",
        "Other": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/resourceTypeGeneral/Other"
      },
      "enumSchema": { "type": "string", "enum": [
        "Audiovisual","Award","Book","BookChapter","Collection",
        "ComputationalNotebook","ConferencePaper","ConferenceProceeding",
        "DataPaper","Dataset","Dissertation","Event","Image",
        "InteractiveResource","Instrument","Journal","JournalArticle",
        "Model","OutputManagementPlan","PeerReview","PhysicalObject",
        "Preprint","Project","Report","Service","Software","Sound",
        "Standard","StudyRegistration","Text","Workflow","Other"
      ] }
    },
    "descriptionType": {
      "$comment": "Note: 'SeriesInformation' as a container is superseded by 'relatedItems' with relationType 'IsPublishedIn' in 4.6; the enum remains for backward compatibility.",
      "enum": ["Abstract","Methods","SeriesInformation","TableOfContents","TechnicalInfo","Other"],
      "iriMap": {
        "Abstract": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/descriptionType/Abstract",
        "Methods": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/descriptionType/Methods",
        "SeriesInformation": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/descriptionType/SeriesInformation",
        "TableOfContents": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/descriptionType/TableOfContents",
        "TechnicalInfo": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/descriptionType/TechnicalInfo",
        "Other": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/descriptionType/Other"
      },
      "enumSchema": { "type": "string", "enum": ["Abstract","Methods","SeriesInformation","TableOfContents","TechnicalInfo","Other"] }
    },
    "contributorType": {
      "enum": [
        "ContactPerson","DataCollector","DataCurator","DataManager",
        "Distributor","Editor","HostingInstitution","Other",
        "Producer","ProjectLeader","ProjectManager","ProjectMember",
        "RegistrationAgency","RegistrationAuthority","RelatedPerson",
        "ResearchGroup","RightsHolder","Researcher","Sponsor",
        "Supervisor","Translator","WorkPackageLeader"
      ],
      "iriMap": {
        "ContactPerson": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/ContactPerson",
        "DataCollector": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/DataCollector",
        "DataCurator": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/DataCurator",
        "DataManager": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/DataManager",
        "Distributor": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/Distributor",
        "Editor": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/Editor",
        "HostingInstitution": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/HostingInstitution",
        "Other": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/Other",
        "Producer": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/Producer",
        "ProjectLeader": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/ProjectLeader",
        "ProjectManager": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/ProjectManager",
        "ProjectMember": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/ProjectMember",
        "RegistrationAgency": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/RegistrationAgency",
        "RegistrationAuthority": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/RegistrationAuthority",
        "RelatedPerson": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/RelatedPerson",
        "ResearchGroup": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/ResearchGroup",
        "RightsHolder": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/RightsHolder",
        "Researcher": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/Researcher",
        "Sponsor": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/Sponsor",
        "Supervisor": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/Supervisor",
        "Translator": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/Translator",
        "WorkPackageLeader": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/contributorType/WorkPackageLeader"
      },
      "enumSchema": { "type": "string", "enum": [
        "ContactPerson","DataCollector","DataCurator","DataManager",
        "Distributor","Editor","HostingInstitution","Other",
        "Producer","ProjectLeader","ProjectManager","ProjectMember",
        "RegistrationAgency","RegistrationAuthority","RelatedPerson",
        "ResearchGroup","RightsHolder","Researcher","Sponsor",
        "Supervisor","Translator","WorkPackageLeader"
      ] }
    },
    "dateType": {
      "enum": [
        "Accepted","Available","Collected","Copyrighted","Coverage",
        "Created","Issued","Other","Submitted","Updated","Valid","Withdrawn"
      ],
      "iriMap": {
        "Accepted": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Accepted",
        "Available": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Available",
        "Collected": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Collected",
        "Copyrighted": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Copyrighted",
        "Coverage": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Coverage",
        "Created": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Created",
        "Issued": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Issued",
        "Other": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Other",
        "Submitted": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Submitted",
        "Updated": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Updated",
        "Valid": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Valid",
        "Withdrawn": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/dateType/Withdrawn"
      },
      "enumSchema": { "type": "string", "enum": [
        "Accepted","Available","Collected","Copyrighted","Coverage",
        "Created","Issued","Other","Submitted","Updated","Valid","Withdrawn"
      ] }
    },
    "nameType": {
      "enum": ["Personal","Organizational"],
      "iriMap": {
        "Personal": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/nameType/Personal",
        "Organizational": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/nameType/Organizational"
      },
      "enumSchema": { "type": "string", "enum": ["Personal","Organizational"] }
    },
    "relatedIdentifierType": {
      "enum": [
        "ARK","arXiv","bibcode","CSTR","DOI","EAN13","EISSN","Handle",
        "IGSN","ISBN","ISSN","ISTC","LISSN","LSID","PMID","PURL",
        "RRID","UPC","URL","URN","w3id"
      ],
      "iriMap": {
        "ARK": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/ARK",
        "arXiv": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/arXiv",
        "bibcode": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/bibcode",
        "CSTR": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/CSTR",
        "DOI": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/DOI",
        "EAN13": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/EAN13",
        "EISSN": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/EISSN",
        "Handle": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/Handle",
        "IGSN": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/IGSN",
        "ISBN": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/ISBN",
        "ISSN": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/ISSN",
        "ISTC": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/ISTC",
        "LISSN": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/LISSN",
        "LSID": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/LSID",
        "PMID": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/PMID",
        "PURL": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/PURL",
        "RRID": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/RRID",
        "UPC": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/UPC",
        "URL": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/URL",
        "URN": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/URN",
        "w3id": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relatedIdentifierType/w3id"
      },
      "enumSchema": { "type": "string", "enum": [
        "ARK","arXiv","bibcode","CSTR","DOI","EAN13","EISSN","Handle",
        "IGSN","ISBN","ISSN","ISTC","LISSN","LSID","PMID","PURL",
        "RRID","UPC","URL","URN","w3id"
      ] }
    },
    "relationType": {
      "enum": [
        "IsCitedBy","Cites","IsSupplementTo","IsSupplementedBy","IsContinuedBy",
        "Continues","IsNewVersionOf","IsPreviousVersionOf","IsPartOf","HasPart",
        "IsPublishedIn","IsReferencedBy","References","IsDocumentedBy","Documents",
        "IsCompiledBy","Compiles","IsVariantFormOf","IsOriginalFormOf","IsIdenticalTo",
        "HasMetadata","IsMetadataFor","Reviews","IsReviewedBy","IsDerivedFrom","IsSourceOf",
        "Describes","IsDescribedBy","HasVersion","IsVersionOf","Requires","IsRequiredBy",
        "Obsoletes","IsObsoletedBy","Collects","IsCollectedBy","HasTranslation","IsTranslationOf"
      ],
      "iriMap": {
        "IsCitedBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsCitedBy",
        "Cites": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/Cites",
        "IsSupplementTo": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsSupplementTo",
        "IsSupplementedBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsSupplementedBy",
        "IsContinuedBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsContinuedBy",
        "Continues": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/Continues",
        "IsNewVersionOf": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsNewVersionOf",
        "IsPreviousVersionOf": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsPreviousVersionOf",
        "IsPartOf": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsPartOf",
        "HasPart": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/HasPart",
        "IsPublishedIn": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsPublishedIn",
        "IsReferencedBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsReferencedBy",
        "References": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/References",
        "IsDocumentedBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsDocumentedBy",
        "Documents": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/Documents",
        "IsCompiledBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsCompiledBy",
        "Compiles": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/Compiles",
        "IsVariantFormOf": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsVariantFormOf",
        "IsOriginalFormOf": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsOriginalFormOf",
        "IsIdenticalTo": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsIdenticalTo",
        "HasMetadata": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/HasMetadata",
        "IsMetadataFor": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsMetadataFor",
        "Reviews": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/Reviews",
        "IsReviewedBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsReviewedBy",
        "IsDerivedFrom": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsDerivedFrom",
        "IsSourceOf": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsSourceOf",
        "Describes": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/Describes",
        "IsDescribedBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsDescribedBy",
        "HasVersion": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/HasVersion",
        "IsVersionOf": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsVersionOf",
        "Requires": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/Requires",
        "IsRequiredBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsRequiredBy",
        "Obsoletes": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/Obsoletes",
        "IsObsoletedBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsObsoletedBy",
        "Collects": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/Collects",
        "IsCollectedBy": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsCollectedBy",
        "HasTranslation": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/HasTranslation",
        "IsTranslationOf": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/relationType/IsTranslationOf"
      },
      "enumSchema": { "type": "string", "enum": [
        "IsCitedBy","Cites","IsSupplementTo","IsSupplementedBy","IsContinuedBy",
        "Continues","IsNewVersionOf","IsPreviousVersionOf","IsPartOf","HasPart",
        "IsPublishedIn","IsReferencedBy","References","IsDocumentedBy","Documents",
        "IsCompiledBy","Compiles","IsVariantFormOf","IsOriginalFormOf","IsIdenticalTo",
        "HasMetadata","IsMetadataFor","Reviews","IsReviewedBy","IsDerivedFrom","IsSourceOf",
        "Describes","IsDescribedBy","HasVersion","IsVersionOf","Requires","IsRequiredBy",
        "Obsoletes","IsObsoletedBy","Collects","IsCollectedBy","HasTranslation","IsTranslationOf"
      ] }
    },
    "funderIdentifierType": {
      "enum": ["ISNI","GRID","ROR","Crossref Funder ID","Other"],
      "iriMap": {
        "ISNI": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/funderIdentifierType/ISNI",
        "GRID": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/funderIdentifierType/GRID",
        "ROR": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/funderIdentifierType/ROR",
        "Crossref Funder ID": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/funderIdentifierType/Crossref%20Funder%20ID",
        "Other": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/funderIdentifierType/Other"
      },
      "enumSchema": { "type": "string", "enum": ["ISNI","GRID","ROR","Crossref Funder ID","Other"] }
    },
    "titleType": {
      "enum": ["AlternativeTitle","Subtitle","TranslatedTitle","Other"],
      "iriMap": {
        "AlternativeTitle": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/titleType/AlternativeTitle",
        "Subtitle": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/titleType/Subtitle",
        "TranslatedTitle": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/titleType/TranslatedTitle",
        "Other": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#enums/titleType/Other"
      },
      "enumSchema": { "type": "string", "enum": ["AlternativeTitle","Subtitle","TranslatedTitle","Other"] }
    }
  },
  "$refs": {
    "relationTypeForRelatedItem": { "$ref": "#/$defs/relationType/enumSchema" }
  },
  "profile": {
    "$comment": "==== JSON-LD CONTEXT (profile.@context) — gives semantic meaning to the attributes. NOTE: 'doi' is typed as xsd:string to match API input. A resolvable DOI IRI can be constructed during export as https://doi.org/<doi>. ====",
    "@context": {
      "@version": 1.1,
      "datacite": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-profile.json#",
      "schema": "http://schema.org/",
      "dcat": "http://www.w3.org/ns/dcat#",
      "skos": "http://www.w3.org/2004/02/skos/core#",
      "xsd": "http://www.w3.org/2001/XMLSchema#",
      "$comment": "Language handling note: DataCite arrays like 'titles' and 'descriptions' carry a sibling 'lang' string (BCP 47). We keep these as plain strings here for compatibility. During export (see exportProfile), we convert them to JSON-LD language-tagged value objects { '@value': text, '@language': lang }.",
      "identifiers": { "@id": "datacite:identifiers", "@container": "@list" },
      "identifier": { "@id": "datacite:identifier", "@type": "xsd:string" },
      "identifierType": { "@id": "datacite:identifierType", "@type": "xsd:string" },
      "alternateIdentifiers": { "@id": "datacite:alternateIdentifiers", "@container": "@list" },
      "alternateIdentifier": { "@id": "datacite:alternateIdentifier", "@type": "xsd:string" },
      "alternateIdentifierType": { "@id": "datacite:alternateIdentifierType", "@type": "xsd:string" },
      "doi": { "@id": "datacite:identifier", "@type": "xsd:string" },
      "creators": { "@id": "datacite:creators", "@container": "@list" },
      "name": { "@id": "schema:name", "@type": "xsd:string" },
      "creatorName": { "@id": "datacite:creatorName", "@type": "xsd:string" },
      "contributorName": { "@id": "datacite:contributorName", "@type": "xsd:string" },
      "nameType": { "@id": "datacite:nameType", "@type": "xsd:string" },
      "givenName": { "@id": "datacite:givenName", "@type": "xsd:string" },
      "familyName": { "@id": "datacite:familyName", "@type": "xsd:string" },
      "affiliation": { "@id": "datacite:affiliation", "@container": "@list" },
      "affiliationIdentifier": { "@id": "datacite:affiliationIdentifier", "@type": "xsd:string" },
      "affiliationIdentifierScheme": { "@id": "datacite:affiliationIdentifierScheme", "@type": "xsd:string" },
      "nameIdentifiers": { "@id": "datacite:nameIdentifier", "@container": "@list" },
      "nameIdentifier": { "@id": "datacite:nameIdentifier", "@type": "@id" },
      "nameIdentifierScheme": { "@id": "datacite:nameIdentifierScheme", "@type": "xsd:string" },
      "titles": { "@id": "datacite:titles", "@container": "@list" },
      "title": { "@id": "datacite:title", "@type": "xsd:string" },
      "titleType": { "@id": "datacite:titleType", "@type": "xsd:string" },
      "publisher": { "@id": "datacite:publisher" },
      "publisherIdentifier": { "@id": "datacite:publisherIdentifier", "@type": "xsd:string" },
      "publisherIdentifierScheme": { "@id": "datacite:publisherIdentifierScheme", "@type": "xsd:string" },
      "publicationYear": { "@id": "datacite:publicationYear" },
      "container": { "@id": "datacite:container" },
      "subjects": { "@id": "datacite:subjects", "@container": "@list" },
      "subject": { "@id": "datacite:subject", "@type": "xsd:string" },
      "subjectScheme": { "@id": "datacite:subjectScheme", "@type": "xsd:string" },
      "schemeUri": { "@id": "datacite:schemeURI", "@type": "@id" },
      "valueUri": { "@id": "datacite:valueURI", "@type": "@id" },
      "classificationCode": { "@id": "datacite:classificationCode", "@type": "xsd:string" },
      "contributors": { "@id": "datacite:contributors", "@container": "@list" },
      "contributorType": { "@id": "datacite:contributorType", "@type": "xsd:string" },
      "dates": { "@id": "datacite:dates", "@container": "@list" },
      "date": { "@id": "datacite:date", "@type": "xsd:string" },
      "dateType": { "@id": "datacite:dateType", "@type": "xsd:string" },
      "dateInformation": { "@id": "datacite:dateInformation", "@type": "xsd:string" },
      "language": { "@id": "datacite:language", "@type": "xsd:language" },
      "types": { "@id": "datacite:types" },
      "resourceType": { "@id": "datacite:resourceType", "@type": "xsd:string" },
      "relatedIdentifiers": { "@id": "datacite:relatedIdentifiers", "@container": "@list" },
      "relatedIdentifier": { "@id": "datacite:relatedIdentifier", "@type": "xsd:string" },
      "relatedIdentifierType": { "@id": "datacite:relatedIdentifierType", "@type": "xsd:string" },
      "relationType": { "@id": "datacite:relationType", "@type": "xsd:string" },
      "relatedMetadataScheme": { "@id": "datacite:relatedMetadataScheme", "@type": "xsd:string" },
      "schemeType": { "@id": "datacite:schemeType", "@type": "xsd:string" },
      "rightsList": { "@id": "datacite:rightsList", "@container": "@list" },
      "rights": { "@id": "datacite:rights", "@type": "xsd:string" },
      "rightsUri": { "@id": "datacite:rightsURI", "@type": "@id" },
      "rightsIdentifier": { "@id": "datacite:rightsIdentifier", "@type": "xsd:string" },
      "rightsIdentifierScheme": { "@id": "datacite:rightsIdentifierScheme", "@type": "xsd:string" },
      "descriptions": { "@id": "datacite:descriptions", "@container": "@list" },
      "description": { "@id": "datacite:description", "@type": "xsd:string" },
      "descriptionType": { "@id": "datacite:descriptionType", "@type": "xsd:string" },
      "geoLocations": { "@id": "datacite:geoLocations", "@container": "@list" },
      "geoLocationPlace": { "@id": "datacite:geoLocationPlace", "@type": "xsd:string" },
      "geoLocationPoint": { "@id": "datacite:geoLocationPoint" },
      "geoLocationBox": { "@id": "datacite:geoLocationBox" },
      "geoLocationPolygon": { "@id": "datacite:geoLocationPolygon", "@container": "@list" },
      "polygonPoint": { "@id": "datacite:polygonPoint", "@container": "@list" },
      "inPolygonPoint": { "@id": "datacite:inPolygonPoint" },
      "fundingReferences": { "@id": "datacite:fundingReferences", "@container": "@list" },
      "funderName": { "@id": "datacite:funderName", "@type": "xsd:string" },
      "funderIdentifier": { "@id": "datacite:funderIdentifier", "@type": "@id" },
      "funderIdentifierType": { "@id": "datacite:funderIdentifierType", "@type": "xsd:string" },
      "awardNumber": { "@id": "datacite:awardNumber", "@type": "xsd:string" },
      "awardUri": { "@id": "datacite:awardURI", "@type": "@id" },
      "awardTitle": { "@id": "datacite:awardTitle", "@type": "xsd:string" },
      "relatedItems": { "@id": "datacite:relatedItems", "@container": "@list" },
      "relatedItemType": { "@id": "datacite:relatedItemType", "@type": "xsd:string" },
      "relatedItemIdentifier": { "@id": "datacite:relatedItemIdentifier", "@type": "xsd:string" },
      "relatedItemIdentifierType": { "@id": "datacite:relatedItemIdentifierType", "@type": "xsd:string" },
      "relatedItemRelationType": { "@id": "datacite:relationType", "@type": "xsd:string" },
      "volume": { "@id": "datacite:volume", "@type": "xsd:string" },
      "issue": { "@id": "datacite:issue", "@type": "xsd:string" },
      "number": { "@id": "datacite:number", "@type": "xsd:string" },
      "numberType": { "@id": "datacite:numberType", "@type": "xsd:string" },
      "firstPage": { "@id": "datacite:firstPage", "@type": "xsd:string" },
      "lastPage": { "@id": "datacite:lastPage", "@type": "xsd:string" },
      "edition": { "@id": "datacite:edition", "@type": "xsd:string" }
    }
  },
  "responseProfile": {
    "$comment": "==== JSON:API RESPONSE SCHEMA — validates DataCite REST responses. Allows server-added read-only/analytics fields under data.attributes. ====",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-response.json",
    "title": "DataCite REST API Response (JSON:API envelope)",
    "description": "Companion schema to validate DataCite REST API responses that use a JSON:API envelope. This schema validates the envelope and allows additional, read-only attributes returned by the API. Use the submit/bundled profile (this file's root schema) to validate client-submitted payloads.",
    "type": "object",
    "properties": {
      "data": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "The DOI, formatted as prefix/suffix." },
          "type": { "type": "string", "const": "dois" },
          "attributes": {
            "type": "object",
            "description": "The DataCite metadata attributes. In API responses this includes read-only and analytics fields (e.g., url, state, viewCount, downloadsOverTime, created, registered, updated, etc.). These are intentionally not constrained here to keep the response schema in sync with server-side additions.",
            "additionalProperties": true
          },
          "relationships": { "type": "object", "additionalProperties": true },
          "links": { "type": "object", "additionalProperties": true }
        },
        "required": ["id", "type", "attributes"],
        "additionalProperties": true
      },
      "included": { "type": "array", "items": { "type": "object" } },
      "links": { "type": "object", "additionalProperties": true },
      "meta": { "type": "object", "additionalProperties": true },
      "errors": { "type": "array", "items": { "type": "object" } }
    },
    "oneOf": [
      { "required": ["data"] },
      { "required": ["errors"] }
    ],
    "additionalProperties": false
  },
  "submitProfile": {
    "$comment": "==== JSON:API SUBMISSION SCHEMA — validates the client envelope; the 'data.attributes' MUST conform to the root attributes schema (#). ====",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://selgebali.github.io/datacite4.6-jsonld/datacite4.6-submit.json",
    "title": "DataCite REST API Submission (JSON:API envelope)",
    "description": "Schema to validate DataCite REST API submissions using a JSON:API envelope. The attributes payload MUST conform to the root attributes schema in this file.",
    "type": "object",
    "properties": {
      "data": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "const": "dois" },
          "attributes": { "$ref": "#" },
          "relationships": { "type": "object", "additionalProperties": true },
          "links": { "type": "object", "additionalProperties": true }
        },
        "required": ["type", "attributes"],
        "additionalProperties": false
      }
    },
    "required": ["data"],
    "additionalProperties": false
  },
  "exportProfile": {
    "$comment": "==== EXPORT PROFILE — declarative notes and examples for transforming DataCite-shaped JSON into JSON-LD/RDF with proper language-tagged literals and a resolvable DOI @id. This section is documentation for exporters; it is not a JSON Schema and will be ignored by validators. ====",
    "title": "Export rules for JSON-LD/RDF",
    "description": "Guidance for exporters that take validated DataCite 4.6 JSON and produce graph-native JSON-LD/RDF, including language-tag handling and DOI IRI construction.",
    "languageConversion": {
      "$comment": "Convert fields that have text + 'lang' siblings into JSON-LD value objects with '@language'. If 'lang' is absent, export a plain string literal.",
      "rules": [
        {
          "source": "/titles/*",
          "valuePointer": "/title",
          "langPointer": "/lang",
          "targetProperty": "datacite:title",
          "export": "If lang present: { '@value': value, '@language': lang }; else: value"
        },
        {
          "source": "/descriptions/*",
          "valuePointer": "/description",
          "langPointer": "/lang",
          "targetProperty": "datacite:description",
          "export": "If lang present: { '@value': value, '@language': lang }; else: value"
        },
        {
          "source": "/subjects/*",
          "valuePointer": "/subject",
          "langPointer": "/lang",
          "targetProperty": "datacite:subject",
          "export": "If lang present: { '@value': value, '@language': lang }; else: value"
        },
        {
          "source": "/publisher",
          "valuePointer": "/name",
          "langPointer": "/lang",
          "targetProperty": "datacite:publisher",
          "export": "If lang present: { '@value': value, '@language': lang }; else: value"
        }
      ]
    },
    "identifierConstruction": {
      "$comment": "Construct a resolvable DOI IRI for @id. Preferred order: (1) JSON:API data.id from responses; (2) attributes.doi if present. Do not overwrite if an explicit IRI @id is already provided by an upstream system.",
      "base": "https://doi.org/",
      "fromResponse": {
        "jsonPointer": "/data/id",
        "pattern": "^10\\.[0-9]{4,}/[-._;()/:a-zA-Z0-9]+$",
        "export": "@id = 'https://doi.org/' + data.id"
      },
      "fromAttributes": {
        "jsonPointer": "/doi",
        "pattern": "^10\\.[0-9]{4,}/[-._;()/:a-zA-Z0-9]+$",
        "export": "@id = 'https://doi.org/' + attributes.doi"
      }
    },
    "iriCoercion": {
      "$comment": "Coerce certain string values to IRIs (@id) during export when they look like URLs, without tightening submission-time validation.",
      "rules": [
        {
          "source": "/publisher",
          "valuePointer": "/publisherIdentifier",
          "condition": "^https?://",
          "export": "If value matches condition, emit as @id (IRI) instead of xsd:string."
        }
        ,
        {
          "source": "/alternateIdentifiers/*",
          "valuePointer": "/alternateIdentifier",
          "condition": "^https?://",
          "export": "If value matches condition, emit as @id (IRI) instead of xsd:string."
        },
        {
          "source": "/identifiers/*",
          "valuePointer": "/identifier",
          "condition": "^https?://",
          "export": "If value matches condition, emit as @id (IRI) instead of xsd:string."
        }
      ]
    },
    "jsonldNotes": {
      "$comment": "JSON-LD usage notes for exporters.",
      "contextUsage": "Use profile.@context from this file as '@context' (by URL or inline).",
      "lists": "Fields declared with '@container': '@list' (e.g., 'titles', 'contributors') should be exported as ordered arrays.",
      "iriTyping": "Fields with '@type': '@id' in the context (e.g., 'nameIdentifier', 'rightsUri', 'funderIdentifier', 'awardUri') must remain absolute IRIs."
    },
    "examples": {
      "$comment": "Minimal before/after example showing language-tag conversion and @id construction.",
      "input": {
        "doi": "10.82433/b09z-4k37",
        "titles": [
          { "title": "Genome dataset", "lang": "en" },
          { "title": "Genomdataset", "lang": "sv" }
        ],
        "descriptions": [
          { "description": "Primary release", "descriptionType": "Abstract", "lang": "en" }
        ],
        "publisher": { "name": "Example University", "lang": "en" },
        "subjects": [
          { "subject": "Bioinformatics", "lang": "en" }
        ]
      },
      "outputJSONLD": {
        "@context": { "$ref": "profile.@context" },
        "@id": "https://doi.org/10.82433/b09z-4k37",
        "titles": [
          { "title": { "@value": "Genome dataset", "@language": "en" } },
          { "title": { "@value": "Genomdataset", "@language": "sv" } }
        ],
        "descriptions": [
          { "description": { "@value": "Primary release", "@language": "en" }, "descriptionType": "Abstract" }
        ],
        "publisher": { "name": { "@value": "Example University", "@language": "en" } },
        "subjects": [
          { "subject": { "@value": "Bioinformatics", "@language": "en" } }
        ]
      }
    }
  }
}
